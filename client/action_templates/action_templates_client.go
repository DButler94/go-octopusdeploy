// Code generated by go-swagger; DO NOT EDIT.

package action_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new action templates API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for action templates API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
CreateResponseDescriptorProjectsActionTemplateActionTemplateResource creates a action template resource

Creates a new action template.
*/
func (a *Client) CreateResponseDescriptorProjectsActionTemplateActionTemplateResource(params *CreateResponseDescriptorProjectsActionTemplateActionTemplateResourceParams, authInfo runtime.ClientAuthInfoWriter) (*CreateResponseDescriptorProjectsActionTemplateActionTemplateResourceCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateResponseDescriptorProjectsActionTemplateActionTemplateResourceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CreateResponseDescriptor[Projects.ActionTemplate,ActionTemplateResource]",
		Method:             "POST",
		PathPattern:        "/api/actiontemplates",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateResponseDescriptorProjectsActionTemplateActionTemplateResourceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CreateResponseDescriptorProjectsActionTemplateActionTemplateResourceCreated), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateLogoGetResponder Gets the logo associated with specific version of the action template.
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateLogoGetResponder(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateLogoGetResponderParams, authInfo runtime.ClientAuthInfoWriter, writer io.Writer) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateLogoGetResponderOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateLogoGetResponderParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.ActionTemplateLogoGetResponder]",
		Method:             "GET",
		PathPattern:        "/api/actiontemplates/{typeOrId}/versions/{version}/logo",
		ProducesMediaTypes: []string{"image/png"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateLogoGetResponderReader{formats: a.formats, writer: writer},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateLogoGetResponderOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateLogoPutResponder Updates the logo associated with the latest version of the action template.
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateLogoPutResponder(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateLogoPutResponderParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateLogoPutResponderOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateLogoPutResponderParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.ActionTemplateLogoPutResponder]",
		Method:             "PUT",
		PathPattern:        "/api/actiontemplates/{id}/logo",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateLogoPutResponderReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateLogoPutResponderOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateUsageResponder Gets a list of all steps/deployment processes that use a given action template.
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateUsageResponder(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateUsageResponderParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateUsageResponderOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateUsageResponderParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.ActionTemplateUsageResponder]",
		Method:             "GET",
		PathPattern:        "/api/actiontemplates/{id}/usage",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateUsageResponderReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateUsageResponderOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateVersionGetResponder Gets specific version of action template.
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateVersionGetResponder(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateVersionGetResponderParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateVersionGetResponderOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateVersionGetResponderParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.ActionTemplateVersionGetResponder]",
		Method:             "GET",
		PathPattern:        "/api/actiontemplates/{id}/versions/{version?}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateVersionGetResponderReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateVersionGetResponderOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplatesSearchResponder Lists all available action templates including built-in, custom and community contributed step templates.
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplatesSearchResponder(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplatesSearchResponderParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplatesSearchResponderOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplatesSearchResponderParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.ActionTemplatesSearchResponder]",
		Method:             "GET",
		PathPattern:        "/api/actiontemplates/search",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplatesSearchResponderReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplatesSearchResponderOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsDeploymentActionUpdateActionTemplateActionsUpdateResponder Updates deployment actions to specific version of action template
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsDeploymentActionUpdateActionTemplateActionsUpdateResponder(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsDeploymentActionUpdateActionTemplateActionsUpdateResponderParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsDeploymentActionUpdateActionTemplateActionsUpdateResponderOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsDeploymentActionUpdateActionTemplateActionsUpdateResponderParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.DeploymentActionUpdate.ActionTemplateActionsUpdateResponder]",
		Method:             "POST",
		PathPattern:        "/api/actiontemplates/{id}/actionsUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsDeploymentActionUpdateActionTemplateActionsUpdateResponderReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsDeploymentActionUpdateActionTemplateActionsUpdateResponderOK), nil

}

/*
DeleteOnBackgroundResponseDescriptorProjectsActionTemplateActionTemplateResource deletes a action template resource by ID

Deletes an existing action template and all its versions.
*/
func (a *Client) DeleteOnBackgroundResponseDescriptorProjectsActionTemplateActionTemplateResource(params *DeleteOnBackgroundResponseDescriptorProjectsActionTemplateActionTemplateResourceParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteOnBackgroundResponseDescriptorProjectsActionTemplateActionTemplateResourceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteOnBackgroundResponseDescriptorProjectsActionTemplateActionTemplateResourceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteOnBackgroundResponseDescriptor[Projects.ActionTemplate,ActionTemplateResource]",
		Method:             "DELETE",
		PathPattern:        "/api/actiontemplates/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteOnBackgroundResponseDescriptorProjectsActionTemplateActionTemplateResourceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*DeleteOnBackgroundResponseDescriptorProjectsActionTemplateActionTemplateResourceOK), nil

}

/*
IndexResponseDescriptorProjectsActionTemplateActionTemplateResource gets a list of action template resources

Lists all of the action templates in the current Octopus installation. The results will be sorted alphabetically by name.
*/
func (a *Client) IndexResponseDescriptorProjectsActionTemplateActionTemplateResource(params *IndexResponseDescriptorProjectsActionTemplateActionTemplateResourceParams, authInfo runtime.ClientAuthInfoWriter) (*IndexResponseDescriptorProjectsActionTemplateActionTemplateResourceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewIndexResponseDescriptorProjectsActionTemplateActionTemplateResourceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "IndexResponseDescriptor[Projects.ActionTemplate,ActionTemplateResource]",
		Method:             "GET",
		PathPattern:        "/api/actiontemplates",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &IndexResponseDescriptorProjectsActionTemplateActionTemplateResourceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*IndexResponseDescriptorProjectsActionTemplateActionTemplateResourceOK), nil

}

/*
ListAllResponseDescriptorProjectsActionTemplateActionTemplateResource gets a list of action template resources

Lists the all of the action templates in the current Octopus installation. The results will be sorted by name.
*/
func (a *Client) ListAllResponseDescriptorProjectsActionTemplateActionTemplateResource(params *ListAllResponseDescriptorProjectsActionTemplateActionTemplateResourceParams, authInfo runtime.ClientAuthInfoWriter) (*ListAllResponseDescriptorProjectsActionTemplateActionTemplateResourceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListAllResponseDescriptorProjectsActionTemplateActionTemplateResourceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ListAllResponseDescriptor[Projects.ActionTemplate,ActionTemplateResource]",
		Method:             "GET",
		PathPattern:        "/api/actiontemplates/all",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListAllResponseDescriptorProjectsActionTemplateActionTemplateResourceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ListAllResponseDescriptorProjectsActionTemplateActionTemplateResourceOK), nil

}

/*
LoadResponseDescriptorProjectsActionTemplateActionTemplateResource gets a action template resource by ID

Gets a single action template by ID.
*/
func (a *Client) LoadResponseDescriptorProjectsActionTemplateActionTemplateResource(params *LoadResponseDescriptorProjectsActionTemplateActionTemplateResourceParams, authInfo runtime.ClientAuthInfoWriter) (*LoadResponseDescriptorProjectsActionTemplateActionTemplateResourceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewLoadResponseDescriptorProjectsActionTemplateActionTemplateResourceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "LoadResponseDescriptor[Projects.ActionTemplate,ActionTemplateResource]",
		Method:             "GET",
		PathPattern:        "/api/actiontemplates/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &LoadResponseDescriptorProjectsActionTemplateActionTemplateResourceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*LoadResponseDescriptorProjectsActionTemplateActionTemplateResourceOK), nil

}

/*
ModifyResponseDescriptorProjectsActionTemplateActionTemplateResource modifies a action template resource by ID

Modifies an existing action template.
*/
func (a *Client) ModifyResponseDescriptorProjectsActionTemplateActionTemplateResource(params *ModifyResponseDescriptorProjectsActionTemplateActionTemplateResourceParams, authInfo runtime.ClientAuthInfoWriter) (*ModifyResponseDescriptorProjectsActionTemplateActionTemplateResourceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewModifyResponseDescriptorProjectsActionTemplateActionTemplateResourceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ModifyResponseDescriptor[Projects.ActionTemplate,ActionTemplateResource]",
		Method:             "PUT",
		PathPattern:        "/api/actiontemplates/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ModifyResponseDescriptorProjectsActionTemplateActionTemplateResourceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ModifyResponseDescriptorProjectsActionTemplateActionTemplateResourceOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
