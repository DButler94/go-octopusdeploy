// Code generated by go-swagger; DO NOT EDIT.

package certificates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewCustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams creates a new CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams object
// with the default values initialized.
func NewCustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams() *CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams {

	return &CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParamsWithTimeout creates a new CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParamsWithTimeout(timeout time.Duration) *CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams {

	return &CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams{

		timeout: timeout,
	}
}

// NewCustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParamsWithContext creates a new CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams object
// with the default values initialized, and the ability to set a context for a request
func NewCustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParamsWithContext(ctx context.Context) *CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams {

	return &CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams{

		Context: ctx,
	}
}

// NewCustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParamsWithHTTPClient creates a new CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParamsWithHTTPClient(client *http.Client) *CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams {

	return &CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams{
		HTTPClient: client,
	}
}

/*CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams contains all the parameters to send to the API endpoint
for the custom query response descriptor octopus server web Api actions certificates certificates list responder operation typically these are written to a http.Request
*/
type CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams struct {
	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the custom query response descriptor octopus server web Api actions certificates certificates list responder params
func (o *CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams) WithTimeout(timeout time.Duration) *CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the custom query response descriptor octopus server web Api actions certificates certificates list responder params
func (o *CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the custom query response descriptor octopus server web Api actions certificates certificates list responder params
func (o *CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams) WithContext(ctx context.Context) *CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the custom query response descriptor octopus server web Api actions certificates certificates list responder params
func (o *CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the custom query response descriptor octopus server web Api actions certificates certificates list responder params
func (o *CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams) WithHTTPClient(client *http.Client) *CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the custom query response descriptor octopus server web Api actions certificates certificates list responder params
func (o *CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WriteToRequest writes these params to a swagger request
func (o *CustomQueryResponseDescriptorOctopusServerWebAPIActionsCertificatesCertificatesListResponderParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
