// Code generated by go-swagger; DO NOT EDIT.

package lets_encrypt

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewCustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams creates a new CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams object
// with the default values initialized.
func NewCustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams() *CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams {
	var ()
	return &CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParamsWithTimeout creates a new CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParamsWithTimeout(timeout time.Duration) *CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams {
	var ()
	return &CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams{

		timeout: timeout,
	}
}

// NewCustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParamsWithContext creates a new CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams object
// with the default values initialized, and the ability to set a context for a request
func NewCustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParamsWithContext(ctx context.Context) *CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams {
	var ()
	return &CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams{

		Context: ctx,
	}
}

// NewCustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParamsWithHTTPClient creates a new CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParamsWithHTTPClient(client *http.Client) *CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams {
	var ()
	return &CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams{
		HTTPClient: client,
	}
}

/*CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams contains all the parameters to send to the API endpoint
for the custom action response descriptor octopus server web Api actions lets encrypt Http challenge responder operation typically these are written to a http.Request
*/
type CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams struct {

	/*Token
	  LetsEncrypt response token

	*/
	Token string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the custom action response descriptor octopus server web Api actions lets encrypt Http challenge responder params
func (o *CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams) WithTimeout(timeout time.Duration) *CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the custom action response descriptor octopus server web Api actions lets encrypt Http challenge responder params
func (o *CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the custom action response descriptor octopus server web Api actions lets encrypt Http challenge responder params
func (o *CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams) WithContext(ctx context.Context) *CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the custom action response descriptor octopus server web Api actions lets encrypt Http challenge responder params
func (o *CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the custom action response descriptor octopus server web Api actions lets encrypt Http challenge responder params
func (o *CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams) WithHTTPClient(client *http.Client) *CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the custom action response descriptor octopus server web Api actions lets encrypt Http challenge responder params
func (o *CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithToken adds the token to the custom action response descriptor octopus server web Api actions lets encrypt Http challenge responder params
func (o *CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams) WithToken(token string) *CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams {
	o.SetToken(token)
	return o
}

// SetToken adds the token to the custom action response descriptor octopus server web Api actions lets encrypt Http challenge responder params
func (o *CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams) SetToken(token string) {
	o.Token = token
}

// WriteToRequest writes these params to a swagger request
func (o *CustomActionResponseDescriptorOctopusServerWebAPIActionsLetsEncryptHTTPChallengeResponderParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param token
	if err := r.SetPathParam("token", o.Token); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
