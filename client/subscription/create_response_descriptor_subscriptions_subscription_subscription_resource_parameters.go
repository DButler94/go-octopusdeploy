// Code generated by go-swagger; DO NOT EDIT.

package subscription

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/MattHodge/go-octopusdeploy/models"
)

// NewCreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams creates a new CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams object
// with the default values initialized.
func NewCreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams() *CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams {
	var ()
	return &CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParamsWithTimeout creates a new CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParamsWithTimeout(timeout time.Duration) *CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams {
	var ()
	return &CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams{

		timeout: timeout,
	}
}

// NewCreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParamsWithContext creates a new CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParamsWithContext(ctx context.Context) *CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams {
	var ()
	return &CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams{

		Context: ctx,
	}
}

// NewCreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParamsWithHTTPClient creates a new CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParamsWithHTTPClient(client *http.Client) *CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams {
	var ()
	return &CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams{
		HTTPClient: client,
	}
}

/*CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams contains all the parameters to send to the API endpoint
for the create response descriptor subscriptions subscription subscription resource operation typically these are written to a http.Request
*/
type CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams struct {

	/*SubscriptionResource
	  The SubscriptionResource resource to create

	*/
	SubscriptionResource *models.SubscriptionResource

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create response descriptor subscriptions subscription subscription resource params
func (o *CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams) WithTimeout(timeout time.Duration) *CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create response descriptor subscriptions subscription subscription resource params
func (o *CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create response descriptor subscriptions subscription subscription resource params
func (o *CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams) WithContext(ctx context.Context) *CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create response descriptor subscriptions subscription subscription resource params
func (o *CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create response descriptor subscriptions subscription subscription resource params
func (o *CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams) WithHTTPClient(client *http.Client) *CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create response descriptor subscriptions subscription subscription resource params
func (o *CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSubscriptionResource adds the subscriptionResource to the create response descriptor subscriptions subscription subscription resource params
func (o *CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams) WithSubscriptionResource(subscriptionResource *models.SubscriptionResource) *CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams {
	o.SetSubscriptionResource(subscriptionResource)
	return o
}

// SetSubscriptionResource adds the subscriptionResource to the create response descriptor subscriptions subscription subscription resource params
func (o *CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams) SetSubscriptionResource(subscriptionResource *models.SubscriptionResource) {
	o.SubscriptionResource = subscriptionResource
}

// WriteToRequest writes these params to a swagger request
func (o *CreateResponseDescriptorSubscriptionsSubscriptionSubscriptionResourceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.SubscriptionResource != nil {
		if err := r.SetBodyParam(o.SubscriptionResource); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
