// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/MattHodge/go-octopusdeploy/client/accounts"
	"github.com/MattHodge/go-octopusdeploy/client/action_templates"
	"github.com/MattHodge/go-octopusdeploy/client/alerts"
	"github.com/MattHodge/go-octopusdeploy/client/api_keys"
	"github.com/MattHodge/go-octopusdeploy/client/artifacts"
	"github.com/MattHodge/go-octopusdeploy/client/authentication"
	"github.com/MattHodge/go-octopusdeploy/client/built_in_repository"
	"github.com/MattHodge/go-octopusdeploy/client/certificate_configuration"
	"github.com/MattHodge/go-octopusdeploy/client/certificates"
	"github.com/MattHodge/go-octopusdeploy/client/channels"
	"github.com/MattHodge/go-octopusdeploy/client/cloud_template"
	"github.com/MattHodge/go-octopusdeploy/client/community_action_templates"
	"github.com/MattHodge/go-octopusdeploy/client/configuration"
	"github.com/MattHodge/go-octopusdeploy/client/dashboard_configurations"
	"github.com/MattHodge/go-octopusdeploy/client/dashboards"
	"github.com/MattHodge/go-octopusdeploy/client/deployment_processes"
	"github.com/MattHodge/go-octopusdeploy/client/deployments"
	"github.com/MattHodge/go-octopusdeploy/client/environments"
	"github.com/MattHodge/go-octopusdeploy/client/events"
	"github.com/MattHodge/go-octopusdeploy/client/external_security_groups"
	"github.com/MattHodge/go-octopusdeploy/client/features_configuration"
	"github.com/MattHodge/go-octopusdeploy/client/feeds"
	"github.com/MattHodge/go-octopusdeploy/client/home"
	"github.com/MattHodge/go-octopusdeploy/client/interruptions"
	"github.com/MattHodge/go-octopusdeploy/client/lets_encrypt"
	"github.com/MattHodge/go-octopusdeploy/client/library_variable_sets"
	"github.com/MattHodge/go-octopusdeploy/client/licenses"
	"github.com/MattHodge/go-octopusdeploy/client/lifecycles"
	"github.com/MattHodge/go-octopusdeploy/client/machine_policies"
	"github.com/MattHodge/go-octopusdeploy/client/machine_roles"
	"github.com/MattHodge/go-octopusdeploy/client/machines"
	"github.com/MattHodge/go-octopusdeploy/client/maintenance_configuration"
	"github.com/MattHodge/go-octopusdeploy/client/migration"
	"github.com/MattHodge/go-octopusdeploy/client/nu_get"
	"github.com/MattHodge/go-octopusdeploy/client/octopus_server_nodes"
	"github.com/MattHodge/go-octopusdeploy/client/packages"
	"github.com/MattHodge/go-octopusdeploy/client/permissions"
	"github.com/MattHodge/go-octopusdeploy/client/progression"
	"github.com/MattHodge/go-octopusdeploy/client/project_groups"
	"github.com/MattHodge/go-octopusdeploy/client/project_triggers"
	"github.com/MattHodge/go-octopusdeploy/client/projects"
	"github.com/MattHodge/go-octopusdeploy/client/proxies"
	"github.com/MattHodge/go-octopusdeploy/client/releases"
	"github.com/MattHodge/go-octopusdeploy/client/reporting"
	"github.com/MattHodge/go-octopusdeploy/client/scheduler"
	"github.com/MattHodge/go-octopusdeploy/client/server_configuration"
	"github.com/MattHodge/go-octopusdeploy/client/server_status"
	"github.com/MattHodge/go-octopusdeploy/client/smtp_configuration"
	"github.com/MattHodge/go-octopusdeploy/client/status"
	"github.com/MattHodge/go-octopusdeploy/client/subscription"
	"github.com/MattHodge/go-octopusdeploy/client/tag_sets"
	"github.com/MattHodge/go-octopusdeploy/client/tasks"
	"github.com/MattHodge/go-octopusdeploy/client/teams"
	"github.com/MattHodge/go-octopusdeploy/client/tenant_variables"
	"github.com/MattHodge/go-octopusdeploy/client/tenants"
	"github.com/MattHodge/go-octopusdeploy/client/upgrade_configuration"
	"github.com/MattHodge/go-octopusdeploy/client/user_onboarding"
	"github.com/MattHodge/go-octopusdeploy/client/user_roles"
	"github.com/MattHodge/go-octopusdeploy/client/users"
	"github.com/MattHodge/go-octopusdeploy/client/variables"
)

// Default octopus server HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http"}

// NewHTTPClient creates a new octopus server HTTP client.
func NewHTTPClient(formats strfmt.Registry) *OctopusServer {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new octopus server HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *OctopusServer {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new octopus server client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *OctopusServer {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(OctopusServer)
	cli.Transport = transport

	cli.Accounts = accounts.New(transport, formats)

	cli.ActionTemplates = action_templates.New(transport, formats)

	cli.Alerts = alerts.New(transport, formats)

	cli.APIKeys = api_keys.New(transport, formats)

	cli.Artifacts = artifacts.New(transport, formats)

	cli.Authentication = authentication.New(transport, formats)

	cli.BuiltInRepository = built_in_repository.New(transport, formats)

	cli.CertificateConfiguration = certificate_configuration.New(transport, formats)

	cli.Certificates = certificates.New(transport, formats)

	cli.Channels = channels.New(transport, formats)

	cli.CloudTemplate = cloud_template.New(transport, formats)

	cli.CommunityActionTemplates = community_action_templates.New(transport, formats)

	cli.Configuration = configuration.New(transport, formats)

	cli.DashboardConfigurations = dashboard_configurations.New(transport, formats)

	cli.Dashboards = dashboards.New(transport, formats)

	cli.DeploymentProcesses = deployment_processes.New(transport, formats)

	cli.Deployments = deployments.New(transport, formats)

	cli.Environments = environments.New(transport, formats)

	cli.Events = events.New(transport, formats)

	cli.ExternalSecurityGroups = external_security_groups.New(transport, formats)

	cli.FeaturesConfiguration = features_configuration.New(transport, formats)

	cli.Feeds = feeds.New(transport, formats)

	cli.Home = home.New(transport, formats)

	cli.Interruptions = interruptions.New(transport, formats)

	cli.LetsEncrypt = lets_encrypt.New(transport, formats)

	cli.LibraryVariableSets = library_variable_sets.New(transport, formats)

	cli.Licenses = licenses.New(transport, formats)

	cli.Lifecycles = lifecycles.New(transport, formats)

	cli.MachinePolicies = machine_policies.New(transport, formats)

	cli.MachineRoles = machine_roles.New(transport, formats)

	cli.Machines = machines.New(transport, formats)

	cli.MaintenanceConfiguration = maintenance_configuration.New(transport, formats)

	cli.Migration = migration.New(transport, formats)

	cli.NuGet = nu_get.New(transport, formats)

	cli.OctopusServerNodes = octopus_server_nodes.New(transport, formats)

	cli.Packages = packages.New(transport, formats)

	cli.Permissions = permissions.New(transport, formats)

	cli.Progression = progression.New(transport, formats)

	cli.ProjectGroups = project_groups.New(transport, formats)

	cli.ProjectTriggers = project_triggers.New(transport, formats)

	cli.Projects = projects.New(transport, formats)

	cli.Proxies = proxies.New(transport, formats)

	cli.Releases = releases.New(transport, formats)

	cli.Reporting = reporting.New(transport, formats)

	cli.Scheduler = scheduler.New(transport, formats)

	cli.ServerConfiguration = server_configuration.New(transport, formats)

	cli.ServerStatus = server_status.New(transport, formats)

	cli.SMTPConfiguration = smtp_configuration.New(transport, formats)

	cli.Status = status.New(transport, formats)

	cli.Subscription = subscription.New(transport, formats)

	cli.TagSets = tag_sets.New(transport, formats)

	cli.Tasks = tasks.New(transport, formats)

	cli.Teams = teams.New(transport, formats)

	cli.TenantVariables = tenant_variables.New(transport, formats)

	cli.Tenants = tenants.New(transport, formats)

	cli.UpgradeConfiguration = upgrade_configuration.New(transport, formats)

	cli.UserOnboarding = user_onboarding.New(transport, formats)

	cli.UserRoles = user_roles.New(transport, formats)

	cli.Users = users.New(transport, formats)

	cli.Variables = variables.New(transport, formats)

	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// OctopusServer is a client for octopus server
type OctopusServer struct {
	Accounts *accounts.Client

	ActionTemplates *action_templates.Client

	Alerts *alerts.Client

	APIKeys *api_keys.Client

	Artifacts *artifacts.Client

	Authentication *authentication.Client

	BuiltInRepository *built_in_repository.Client

	CertificateConfiguration *certificate_configuration.Client

	Certificates *certificates.Client

	Channels *channels.Client

	CloudTemplate *cloud_template.Client

	CommunityActionTemplates *community_action_templates.Client

	Configuration *configuration.Client

	DashboardConfigurations *dashboard_configurations.Client

	Dashboards *dashboards.Client

	DeploymentProcesses *deployment_processes.Client

	Deployments *deployments.Client

	Environments *environments.Client

	Events *events.Client

	ExternalSecurityGroups *external_security_groups.Client

	FeaturesConfiguration *features_configuration.Client

	Feeds *feeds.Client

	Home *home.Client

	Interruptions *interruptions.Client

	LetsEncrypt *lets_encrypt.Client

	LibraryVariableSets *library_variable_sets.Client

	Licenses *licenses.Client

	Lifecycles *lifecycles.Client

	MachinePolicies *machine_policies.Client

	MachineRoles *machine_roles.Client

	Machines *machines.Client

	MaintenanceConfiguration *maintenance_configuration.Client

	Migration *migration.Client

	NuGet *nu_get.Client

	OctopusServerNodes *octopus_server_nodes.Client

	Packages *packages.Client

	Permissions *permissions.Client

	Progression *progression.Client

	ProjectGroups *project_groups.Client

	ProjectTriggers *project_triggers.Client

	Projects *projects.Client

	Proxies *proxies.Client

	Releases *releases.Client

	Reporting *reporting.Client

	Scheduler *scheduler.Client

	ServerConfiguration *server_configuration.Client

	ServerStatus *server_status.Client

	SMTPConfiguration *smtp_configuration.Client

	Status *status.Client

	Subscription *subscription.Client

	TagSets *tag_sets.Client

	Tasks *tasks.Client

	Teams *teams.Client

	TenantVariables *tenant_variables.Client

	Tenants *tenants.Client

	UpgradeConfiguration *upgrade_configuration.Client

	UserOnboarding *user_onboarding.Client

	UserRoles *user_roles.Client

	Users *users.Client

	Variables *variables.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *OctopusServer) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.Accounts.SetTransport(transport)

	c.ActionTemplates.SetTransport(transport)

	c.Alerts.SetTransport(transport)

	c.APIKeys.SetTransport(transport)

	c.Artifacts.SetTransport(transport)

	c.Authentication.SetTransport(transport)

	c.BuiltInRepository.SetTransport(transport)

	c.CertificateConfiguration.SetTransport(transport)

	c.Certificates.SetTransport(transport)

	c.Channels.SetTransport(transport)

	c.CloudTemplate.SetTransport(transport)

	c.CommunityActionTemplates.SetTransport(transport)

	c.Configuration.SetTransport(transport)

	c.DashboardConfigurations.SetTransport(transport)

	c.Dashboards.SetTransport(transport)

	c.DeploymentProcesses.SetTransport(transport)

	c.Deployments.SetTransport(transport)

	c.Environments.SetTransport(transport)

	c.Events.SetTransport(transport)

	c.ExternalSecurityGroups.SetTransport(transport)

	c.FeaturesConfiguration.SetTransport(transport)

	c.Feeds.SetTransport(transport)

	c.Home.SetTransport(transport)

	c.Interruptions.SetTransport(transport)

	c.LetsEncrypt.SetTransport(transport)

	c.LibraryVariableSets.SetTransport(transport)

	c.Licenses.SetTransport(transport)

	c.Lifecycles.SetTransport(transport)

	c.MachinePolicies.SetTransport(transport)

	c.MachineRoles.SetTransport(transport)

	c.Machines.SetTransport(transport)

	c.MaintenanceConfiguration.SetTransport(transport)

	c.Migration.SetTransport(transport)

	c.NuGet.SetTransport(transport)

	c.OctopusServerNodes.SetTransport(transport)

	c.Packages.SetTransport(transport)

	c.Permissions.SetTransport(transport)

	c.Progression.SetTransport(transport)

	c.ProjectGroups.SetTransport(transport)

	c.ProjectTriggers.SetTransport(transport)

	c.Projects.SetTransport(transport)

	c.Proxies.SetTransport(transport)

	c.Releases.SetTransport(transport)

	c.Reporting.SetTransport(transport)

	c.Scheduler.SetTransport(transport)

	c.ServerConfiguration.SetTransport(transport)

	c.ServerStatus.SetTransport(transport)

	c.SMTPConfiguration.SetTransport(transport)

	c.Status.SetTransport(transport)

	c.Subscription.SetTransport(transport)

	c.TagSets.SetTransport(transport)

	c.Tasks.SetTransport(transport)

	c.Teams.SetTransport(transport)

	c.TenantVariables.SetTransport(transport)

	c.Tenants.SetTransport(transport)

	c.UpgradeConfiguration.SetTransport(transport)

	c.UserOnboarding.SetTransport(transport)

	c.UserRoles.SetTransport(transport)

	c.Users.SetTransport(transport)

	c.Variables.SetTransport(transport)

}
