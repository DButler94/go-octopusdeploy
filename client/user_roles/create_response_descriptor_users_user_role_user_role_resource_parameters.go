// Code generated by go-swagger; DO NOT EDIT.

package user_roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/MattHodge/go-octopusdeploy/models"
)

// NewCreateResponseDescriptorUsersUserRoleUserRoleResourceParams creates a new CreateResponseDescriptorUsersUserRoleUserRoleResourceParams object
// with the default values initialized.
func NewCreateResponseDescriptorUsersUserRoleUserRoleResourceParams() *CreateResponseDescriptorUsersUserRoleUserRoleResourceParams {
	var ()
	return &CreateResponseDescriptorUsersUserRoleUserRoleResourceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateResponseDescriptorUsersUserRoleUserRoleResourceParamsWithTimeout creates a new CreateResponseDescriptorUsersUserRoleUserRoleResourceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateResponseDescriptorUsersUserRoleUserRoleResourceParamsWithTimeout(timeout time.Duration) *CreateResponseDescriptorUsersUserRoleUserRoleResourceParams {
	var ()
	return &CreateResponseDescriptorUsersUserRoleUserRoleResourceParams{

		timeout: timeout,
	}
}

// NewCreateResponseDescriptorUsersUserRoleUserRoleResourceParamsWithContext creates a new CreateResponseDescriptorUsersUserRoleUserRoleResourceParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateResponseDescriptorUsersUserRoleUserRoleResourceParamsWithContext(ctx context.Context) *CreateResponseDescriptorUsersUserRoleUserRoleResourceParams {
	var ()
	return &CreateResponseDescriptorUsersUserRoleUserRoleResourceParams{

		Context: ctx,
	}
}

// NewCreateResponseDescriptorUsersUserRoleUserRoleResourceParamsWithHTTPClient creates a new CreateResponseDescriptorUsersUserRoleUserRoleResourceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateResponseDescriptorUsersUserRoleUserRoleResourceParamsWithHTTPClient(client *http.Client) *CreateResponseDescriptorUsersUserRoleUserRoleResourceParams {
	var ()
	return &CreateResponseDescriptorUsersUserRoleUserRoleResourceParams{
		HTTPClient: client,
	}
}

/*CreateResponseDescriptorUsersUserRoleUserRoleResourceParams contains all the parameters to send to the API endpoint
for the create response descriptor users user role user role resource operation typically these are written to a http.Request
*/
type CreateResponseDescriptorUsersUserRoleUserRoleResourceParams struct {

	/*UserRoleResource
	  The UserRoleResource resource to create

	*/
	UserRoleResource *models.UserRoleResource

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create response descriptor users user role user role resource params
func (o *CreateResponseDescriptorUsersUserRoleUserRoleResourceParams) WithTimeout(timeout time.Duration) *CreateResponseDescriptorUsersUserRoleUserRoleResourceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create response descriptor users user role user role resource params
func (o *CreateResponseDescriptorUsersUserRoleUserRoleResourceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create response descriptor users user role user role resource params
func (o *CreateResponseDescriptorUsersUserRoleUserRoleResourceParams) WithContext(ctx context.Context) *CreateResponseDescriptorUsersUserRoleUserRoleResourceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create response descriptor users user role user role resource params
func (o *CreateResponseDescriptorUsersUserRoleUserRoleResourceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create response descriptor users user role user role resource params
func (o *CreateResponseDescriptorUsersUserRoleUserRoleResourceParams) WithHTTPClient(client *http.Client) *CreateResponseDescriptorUsersUserRoleUserRoleResourceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create response descriptor users user role user role resource params
func (o *CreateResponseDescriptorUsersUserRoleUserRoleResourceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUserRoleResource adds the userRoleResource to the create response descriptor users user role user role resource params
func (o *CreateResponseDescriptorUsersUserRoleUserRoleResourceParams) WithUserRoleResource(userRoleResource *models.UserRoleResource) *CreateResponseDescriptorUsersUserRoleUserRoleResourceParams {
	o.SetUserRoleResource(userRoleResource)
	return o
}

// SetUserRoleResource adds the userRoleResource to the create response descriptor users user role user role resource params
func (o *CreateResponseDescriptorUsersUserRoleUserRoleResourceParams) SetUserRoleResource(userRoleResource *models.UserRoleResource) {
	o.UserRoleResource = userRoleResource
}

// WriteToRequest writes these params to a swagger request
func (o *CreateResponseDescriptorUsersUserRoleUserRoleResourceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.UserRoleResource != nil {
		if err := r.SetBodyParam(o.UserRoleResource); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
