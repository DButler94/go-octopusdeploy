// Code generated by go-swagger; DO NOT EDIT.

package api_keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewCustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams creates a new CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams object
// with the default values initialized.
func NewCustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams() *CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams {
	var ()
	return &CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParamsWithTimeout creates a new CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParamsWithTimeout(timeout time.Duration) *CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams {
	var ()
	return &CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams{

		timeout: timeout,
	}
}

// NewCustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParamsWithContext creates a new CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams object
// with the default values initialized, and the ability to set a context for a request
func NewCustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParamsWithContext(ctx context.Context) *CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams {
	var ()
	return &CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams{

		Context: ctx,
	}
}

// NewCustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParamsWithHTTPClient creates a new CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParamsWithHTTPClient(client *http.Client) *CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams {
	var ()
	return &CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams{
		HTTPClient: client,
	}
}

/*CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams contains all the parameters to send to the API endpoint
for the custom query response descriptor octopus server web Api actions list Api keys responder operation typically these are written to a http.Request
*/
type CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams struct {

	/*UserID
	  ID of the user

	*/
	UserID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the custom query response descriptor octopus server web Api actions list Api keys responder params
func (o *CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams) WithTimeout(timeout time.Duration) *CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the custom query response descriptor octopus server web Api actions list Api keys responder params
func (o *CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the custom query response descriptor octopus server web Api actions list Api keys responder params
func (o *CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams) WithContext(ctx context.Context) *CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the custom query response descriptor octopus server web Api actions list Api keys responder params
func (o *CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the custom query response descriptor octopus server web Api actions list Api keys responder params
func (o *CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams) WithHTTPClient(client *http.Client) *CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the custom query response descriptor octopus server web Api actions list Api keys responder params
func (o *CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUserID adds the userID to the custom query response descriptor octopus server web Api actions list Api keys responder params
func (o *CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams) WithUserID(userID string) *CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the custom query response descriptor octopus server web Api actions list Api keys responder params
func (o *CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams) SetUserID(userID string) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *CustomQueryResponseDescriptorOctopusServerWebAPIActionsListAPIKeysResponderParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param userId
	if err := r.SetPathParam("userId", o.UserID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
