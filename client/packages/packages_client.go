// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new packages API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for packages API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageListNotesAction
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageListNotesAction(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageListNotesActionParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageListNotesActionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsPackageListNotesActionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.PackageListNotesAction]",
		Method:             "GET",
		PathPattern:        "/api/packages/notes",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageListNotesActionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageListNotesActionOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageNotesAction
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageNotesAction(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageNotesActionParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageNotesActionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsPackageNotesActionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.PackageNotesAction]",
		Method:             "GET",
		PathPattern:        "/api/feeds/{id}/packages/notes",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageNotesActionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageNotesActionOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryDeleteAction
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryDeleteAction(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryDeleteActionParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryDeleteActionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryDeleteActionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.PackageRepository.PackageRepositoryDeleteAction]",
		Method:             "DELETE",
		PathPattern:        "/api/packages/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryDeleteActionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryDeleteActionOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetAction
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetAction(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetActionParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetActionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetActionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.PackageRepository.PackageRepositoryGetAction]",
		Method:             "GET",
		PathPattern:        "/api/packages/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetActionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetActionOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawAction
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawAction(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionParams, authInfo runtime.ClientAuthInfoWriter, writer io.Writer) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.PackageRepository.PackageRepositoryGetRawAction]",
		Method:             "GET",
		PathPattern:        "/api/packages/{id}/raw",
		ProducesMediaTypes: []string{"application/octet-stream"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionReader{formats: a.formats, writer: writer},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryListAction
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryListAction(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryListActionParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryListActionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryListActionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.PackageRepository.PackageRepositoryListAction]",
		Method:             "GET",
		PathPattern:        "/api/packages",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryListActionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryListActionOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryUploadAction
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryUploadAction(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryUploadActionParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryUploadActionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryUploadActionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.PackageRepository.PackageRepositoryUploadAction]",
		Method:             "POST",
		PathPattern:        "/api/packages/raw",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryUploadActionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryUploadActionOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageSearchActionOld
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageSearchActionOld(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageSearchActionOldParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageSearchActionOldOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsPackageSearchActionOldParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.PackageSearchActionOld]",
		Method:             "GET",
		PathPattern:        "/api/feeds/{id}/packages",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageSearchActionOldReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageSearchActionOldOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
