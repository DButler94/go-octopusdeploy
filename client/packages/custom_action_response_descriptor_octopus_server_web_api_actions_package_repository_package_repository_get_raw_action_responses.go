// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionReader is a Reader for the CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawAction structure.
type CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionOK creates a CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionOK with default headers values
func NewCustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionOK(writer io.Writer) *CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionOK {
	return &CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionOK{
		Payload: writer,
	}
}

/*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionOK handles this case with default header values.

OK
*/
type CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionOK struct {
	Payload io.Writer
}

func (o *CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionOK) Error() string {
	return fmt.Sprintf("[GET /api/packages/{id}/raw][%d] customActionResponseDescriptorOctopusServerWebApiActionsPackageRepositoryPackageRepositoryGetRawActionOK  %+v", 200, o.Payload)
}

func (o *CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionBadRequest creates a CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionBadRequest with default headers values
func NewCustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionBadRequest() *CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionBadRequest {
	return &CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionBadRequest{}
}

/*CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionBadRequest handles this case with default header values.

Invalid package specified.
Package was not found in the index of the built-in package repository.
Package was not found on disk, although metadata was found in the built-in package repository index. This could mean that the file was manually deleted from disk after being indexed.
No id parameter was provided.
*/
type CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionBadRequest struct {
}

func (o *CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/packages/{id}/raw][%d] customActionResponseDescriptorOctopusServerWebApiActionsPackageRepositoryPackageRepositoryGetRawActionBadRequest ", 400)
}

func (o *CustomActionResponseDescriptorOctopusServerWebAPIActionsPackageRepositoryPackageRepositoryGetRawActionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
