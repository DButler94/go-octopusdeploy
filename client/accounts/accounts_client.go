// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new accounts API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for accounts API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
CreateResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResource creates a account resource

Creates a new account.
*/
func (a *Client) CreateResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResource(params *CreateResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceParams, authInfo runtime.ClientAuthInfoWriter) (*CreateResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CreateResponseDescriptor[Environments.Accounts.Account,Accounts.AccountResource]",
		Method:             "POST",
		PathPattern:        "/api/accounts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CreateResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceCreated), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsAccountPublicKeyDownloadAction Downloads the public key portion of the account's associated certificate, if present.
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsAccountPublicKeyDownloadAction(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsAccountPublicKeyDownloadActionParams, authInfo runtime.ClientAuthInfoWriter, writer io.Writer) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsAccountPublicKeyDownloadActionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsAccountPublicKeyDownloadActionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.AccountPublicKeyDownloadAction]",
		Method:             "GET",
		PathPattern:        "/api/accounts/{id}/pk",
		ProducesMediaTypes: []string{"application/x-x509-ca-cert"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsAccountPublicKeyDownloadActionReader{formats: a.formats, writer: writer},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsAccountPublicKeyDownloadActionOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsAccountUsageListAction Lists projects and deployments which are using an account.
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsAccountUsageListAction(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsAccountUsageListActionParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsAccountUsageListActionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsAccountUsageListActionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.AccountUsageListAction]",
		Method:             "GET",
		PathPattern:        "/api/accounts/{id}/usages",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsAccountUsageListActionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsAccountUsageListActionOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureCloudServicesListAction Lists the cloud services associated with an Azure account.
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureCloudServicesListAction(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureCloudServicesListActionParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureCloudServicesListActionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsAzureCloudServicesListActionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.AzureCloudServicesListAction]",
		Method:             "GET",
		PathPattern:        "/api/accounts/{id}/cloudServices",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureCloudServicesListActionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureCloudServicesListActionOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureResourceGroupsListAction Lists the Resource Groups associated with an Azure account.
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureResourceGroupsListAction(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureResourceGroupsListActionParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureResourceGroupsListActionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsAzureResourceGroupsListActionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.AzureResourceGroupsListAction]",
		Method:             "GET",
		PathPattern:        "/api/accounts/{id}/resourceGroups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureResourceGroupsListActionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureResourceGroupsListActionOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureStorageAccountsListAction Lists the storage accounts asssociated with an Azure account.
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureStorageAccountsListAction(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureStorageAccountsListActionParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureStorageAccountsListActionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsAzureStorageAccountsListActionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.AzureStorageAccountsListAction]",
		Method:             "GET",
		PathPattern:        "/api/accounts/{id}/storageAccounts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureStorageAccountsListActionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureStorageAccountsListActionOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureWebSitesListAction Lists the websites associated with an Azure account.
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureWebSitesListAction(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureWebSitesListActionParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureWebSitesListActionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsAzureWebSitesListActionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.AzureWebSitesListAction]",
		Method:             "GET",
		PathPattern:        "/api/accounts/{accountId}/websites",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureWebSitesListActionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsAzureWebSitesListActionOK), nil

}

/*
DeleteOnBackgroundResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResource deletes a account resource by ID

Deletes an existing account.
*/
func (a *Client) DeleteOnBackgroundResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResource(params *DeleteOnBackgroundResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteOnBackgroundResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteOnBackgroundResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteOnBackgroundResponseDescriptor[Environments.Accounts.Account,Accounts.AccountResource]",
		Method:             "DELETE",
		PathPattern:        "/api/accounts/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteOnBackgroundResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*DeleteOnBackgroundResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceOK), nil

}

/*
IndexResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResource gets a list of account resources

Lists accounts in the current Octopus installation in pages. The results will be sorted alphabetically by name.
*/
func (a *Client) IndexResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResource(params *IndexResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceParams, authInfo runtime.ClientAuthInfoWriter) (*IndexResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewIndexResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "IndexResponseDescriptor[Environments.Accounts.Account,Accounts.AccountResource]",
		Method:             "GET",
		PathPattern:        "/api/accounts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &IndexResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*IndexResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceOK), nil

}

/*
ListAllResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResource gets a list of account resources

Lists all of the accounts in the current Octopus installation. The results will be sorted alphabetically by name.
*/
func (a *Client) ListAllResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResource(params *ListAllResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceParams, authInfo runtime.ClientAuthInfoWriter) (*ListAllResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListAllResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ListAllResponseDescriptor[Environments.Accounts.Account,Accounts.AccountResource]",
		Method:             "GET",
		PathPattern:        "/api/accounts/all",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListAllResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ListAllResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceOK), nil

}

/*
LoadResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResource gets a account resource by ID

Gets a single account by ID.
*/
func (a *Client) LoadResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResource(params *LoadResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceParams, authInfo runtime.ClientAuthInfoWriter) (*LoadResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewLoadResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "LoadResponseDescriptor[Environments.Accounts.Account,Accounts.AccountResource]",
		Method:             "GET",
		PathPattern:        "/api/accounts/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &LoadResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*LoadResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceOK), nil

}

/*
ModifyResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResource modifies a account resource by ID

Modifies an existing account.
*/
func (a *Client) ModifyResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResource(params *ModifyResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceParams, authInfo runtime.ClientAuthInfoWriter) (*ModifyResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewModifyResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ModifyResponseDescriptor[Environments.Accounts.Account,Accounts.AccountResource]",
		Method:             "PUT",
		PathPattern:        "/api/accounts/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ModifyResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ModifyResponseDescriptorEnvironmentsAccountsAccountAccountsAccountResourceOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
