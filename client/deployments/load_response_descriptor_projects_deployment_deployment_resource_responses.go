// Code generated by go-swagger; DO NOT EDIT.

package deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/MattHodge/go-octopusdeploy/models"
)

// LoadResponseDescriptorProjectsDeploymentDeploymentResourceReader is a Reader for the LoadResponseDescriptorProjectsDeploymentDeploymentResource structure.
type LoadResponseDescriptorProjectsDeploymentDeploymentResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LoadResponseDescriptorProjectsDeploymentDeploymentResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewLoadResponseDescriptorProjectsDeploymentDeploymentResourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewLoadResponseDescriptorProjectsDeploymentDeploymentResourceOK creates a LoadResponseDescriptorProjectsDeploymentDeploymentResourceOK with default headers values
func NewLoadResponseDescriptorProjectsDeploymentDeploymentResourceOK() *LoadResponseDescriptorProjectsDeploymentDeploymentResourceOK {
	return &LoadResponseDescriptorProjectsDeploymentDeploymentResourceOK{}
}

/*LoadResponseDescriptorProjectsDeploymentDeploymentResourceOK handles this case with default header values.

Load DeploymentResource by ID
*/
type LoadResponseDescriptorProjectsDeploymentDeploymentResourceOK struct {
	Payload *models.DeploymentResource
}

func (o *LoadResponseDescriptorProjectsDeploymentDeploymentResourceOK) Error() string {
	return fmt.Sprintf("[GET /api/deployments/{id}][%d] loadResponseDescriptorProjectsDeploymentDeploymentResourceOK  %+v", 200, o.Payload)
}

func (o *LoadResponseDescriptorProjectsDeploymentDeploymentResourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeploymentResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
