// Code generated by go-swagger; DO NOT EDIT.

package community_action_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new community action templates API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for community action templates API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateBasedOnCommunityActionTemplateResponder Gets installed version of the template.
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateBasedOnCommunityActionTemplateResponder(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateBasedOnCommunityActionTemplateResponderParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateBasedOnCommunityActionTemplateResponderOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateBasedOnCommunityActionTemplateResponderParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.ActionTemplateBasedOnCommunityActionTemplateResponder]",
		Method:             "GET",
		PathPattern:        "/api/communityactiontemplates/{id}/actiontemplate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateBasedOnCommunityActionTemplateResponderReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsActionTemplateBasedOnCommunityActionTemplateResponderOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateInstallationPostActionResponder Installs community step template.
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateInstallationPostActionResponder(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateInstallationPostActionResponderParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateInstallationPostActionResponderCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateInstallationPostActionResponderParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.CommunityActionTemplateInstallationPostActionResponder]",
		Method:             "POST",
		PathPattern:        "/api/communityactiontemplates/{id}/installation",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateInstallationPostActionResponderReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateInstallationPostActionResponderCreated), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateInstallationPutActionResponder Updates installed community step template to the lastest version.
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateInstallationPutActionResponder(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateInstallationPutActionResponderParams, authInfo runtime.ClientAuthInfoWriter) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateInstallationPutActionResponderOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateInstallationPutActionResponderParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.CommunityActionTemplateInstallationPutActionResponder]",
		Method:             "PUT",
		PathPattern:        "/api/communityactiontemplates/{id}/installation",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateInstallationPutActionResponderReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateInstallationPutActionResponderOK), nil

}

/*
CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateLogoGetResponder Gets the logo associated with the community step template.
NOTE: This definition is not complete. We will be adding more detail in future releases of Octopus.
*/
func (a *Client) CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateLogoGetResponder(params *CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateLogoGetResponderParams, authInfo runtime.ClientAuthInfoWriter, writer io.Writer) (*CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateLogoGetResponderOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateLogoGetResponderParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "CustomActionResponseDescriptor[Octopus.Server.Web.Api.Actions.CommunityActionTemplateLogoGetResponder]",
		Method:             "GET",
		PathPattern:        "/api/communityactiontemplates/{id}/logo",
		ProducesMediaTypes: []string{"image/png"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateLogoGetResponderReader{formats: a.formats, writer: writer},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CustomActionResponseDescriptorOctopusServerWebAPIActionsCommunityActionTemplateLogoGetResponderOK), nil

}

/*
IndexResponseDescriptorProjectsCommunityActionTemplateCommunityActionTemplateResource gets a list of community action template resources
*/
func (a *Client) IndexResponseDescriptorProjectsCommunityActionTemplateCommunityActionTemplateResource(params *IndexResponseDescriptorProjectsCommunityActionTemplateCommunityActionTemplateResourceParams, authInfo runtime.ClientAuthInfoWriter) (*IndexResponseDescriptorProjectsCommunityActionTemplateCommunityActionTemplateResourceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewIndexResponseDescriptorProjectsCommunityActionTemplateCommunityActionTemplateResourceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "IndexResponseDescriptor[Projects.CommunityActionTemplate,CommunityActionTemplateResource]",
		Method:             "GET",
		PathPattern:        "/api/communityactiontemplates",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &IndexResponseDescriptorProjectsCommunityActionTemplateCommunityActionTemplateResourceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*IndexResponseDescriptorProjectsCommunityActionTemplateCommunityActionTemplateResourceOK), nil

}

/*
LoadResponseDescriptorProjectsCommunityActionTemplateCommunityActionTemplateResource gets a community action template resource by ID

Gets a single community step template.
*/
func (a *Client) LoadResponseDescriptorProjectsCommunityActionTemplateCommunityActionTemplateResource(params *LoadResponseDescriptorProjectsCommunityActionTemplateCommunityActionTemplateResourceParams, authInfo runtime.ClientAuthInfoWriter) (*LoadResponseDescriptorProjectsCommunityActionTemplateCommunityActionTemplateResourceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewLoadResponseDescriptorProjectsCommunityActionTemplateCommunityActionTemplateResourceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "LoadResponseDescriptor[Projects.CommunityActionTemplate,CommunityActionTemplateResource]",
		Method:             "GET",
		PathPattern:        "/api/communityactiontemplates/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &LoadResponseDescriptorProjectsCommunityActionTemplateCommunityActionTemplateResourceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*LoadResponseDescriptorProjectsCommunityActionTemplateCommunityActionTemplateResourceOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
