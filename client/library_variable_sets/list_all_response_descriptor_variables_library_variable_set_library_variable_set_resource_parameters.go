// Code generated by go-swagger; DO NOT EDIT.

package library_variable_sets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams creates a new ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams object
// with the default values initialized.
func NewListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams() *ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams {

	return &ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParamsWithTimeout creates a new ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParamsWithTimeout(timeout time.Duration) *ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams {

	return &ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams{

		timeout: timeout,
	}
}

// NewListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParamsWithContext creates a new ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams object
// with the default values initialized, and the ability to set a context for a request
func NewListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParamsWithContext(ctx context.Context) *ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams {

	return &ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams{

		Context: ctx,
	}
}

// NewListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParamsWithHTTPClient creates a new ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParamsWithHTTPClient(client *http.Client) *ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams {

	return &ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams{
		HTTPClient: client,
	}
}

/*ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams contains all the parameters to send to the API endpoint
for the list all response descriptor variables library variable set library variable set resource operation typically these are written to a http.Request
*/
type ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams struct {
	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list all response descriptor variables library variable set library variable set resource params
func (o *ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams) WithTimeout(timeout time.Duration) *ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list all response descriptor variables library variable set library variable set resource params
func (o *ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list all response descriptor variables library variable set library variable set resource params
func (o *ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams) WithContext(ctx context.Context) *ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list all response descriptor variables library variable set library variable set resource params
func (o *ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list all response descriptor variables library variable set library variable set resource params
func (o *ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams) WithHTTPClient(client *http.Client) *ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list all response descriptor variables library variable set library variable set resource params
func (o *ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WriteToRequest writes these params to a swagger request
func (o *ListAllResponseDescriptorVariablesLibraryVariableSetLibraryVariableSetResourceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
