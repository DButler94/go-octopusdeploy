// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FeedResource feed resource
// swagger:model FeedResource
type FeedResource struct {

	// feed type
	// Read Only: true
	// Enum: [None NuGet Docker Maven OctopusProject GitHub]
	FeedType int32 `json:"FeedType,omitempty"`

	// feed Uri
	FeedURI string `json:"FeedUri,omitempty"`

	// Id
	ID string `json:"Id,omitempty"`

	// last modified by
	LastModifiedBy string `json:"LastModifiedBy,omitempty"`

	// last modified on
	// Format: date-time
	LastModifiedOn strfmt.DateTime `json:"LastModifiedOn,omitempty"`

	// links
	Links map[string]string `json:"Links,omitempty"`

	// name
	Name string `json:"Name,omitempty"`

	// password
	Password *SensitiveValue `json:"Password,omitempty"`

	// username
	Username string `json:"Username,omitempty"`
}

// Validate validates this feed resource
func (m *FeedResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFeedType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastModifiedOn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePassword(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var feedResourceTypeFeedTypePropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`["None","NuGet","Docker","Maven","OctopusProject","GitHub"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		feedResourceTypeFeedTypePropEnum = append(feedResourceTypeFeedTypePropEnum, v)
	}
}

// prop value enum
func (m *FeedResource) validateFeedTypeEnum(path, location string, value int32) error {
	if err := validate.Enum(path, location, value, feedResourceTypeFeedTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *FeedResource) validateFeedType(formats strfmt.Registry) error {

	if swag.IsZero(m.FeedType) { // not required
		return nil
	}

	// value enum
	if err := m.validateFeedTypeEnum("FeedType", "body", m.FeedType); err != nil {
		return err
	}

	return nil
}

func (m *FeedResource) validateLastModifiedOn(formats strfmt.Registry) error {

	if swag.IsZero(m.LastModifiedOn) { // not required
		return nil
	}

	if err := validate.FormatOf("LastModifiedOn", "body", "date-time", m.LastModifiedOn.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *FeedResource) validatePassword(formats strfmt.Registry) error {

	if swag.IsZero(m.Password) { // not required
		return nil
	}

	if m.Password != nil {
		if err := m.Password.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("Password")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *FeedResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FeedResource) UnmarshalBinary(b []byte) error {
	var res FeedResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
