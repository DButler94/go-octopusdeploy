// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ActionTemplateUsageResource action template usage resource
// swagger:model ActionTemplateUsageResource
type ActionTemplateUsageResource struct {

	// action Id
	ActionID string `json:"ActionId,omitempty"`

	// action name
	ActionName string `json:"ActionName,omitempty"`

	// action template Id
	ActionTemplateID string `json:"ActionTemplateId,omitempty"`

	// deployment process Id
	DeploymentProcessID string `json:"DeploymentProcessId,omitempty"`

	// Id
	ID string `json:"Id,omitempty"`

	// last modified by
	LastModifiedBy string `json:"LastModifiedBy,omitempty"`

	// last modified on
	// Format: date-time
	LastModifiedOn strfmt.DateTime `json:"LastModifiedOn,omitempty"`

	// links
	Links map[string]string `json:"Links,omitempty"`

	// project Id
	ProjectID string `json:"ProjectId,omitempty"`

	// project name
	ProjectName string `json:"ProjectName,omitempty"`

	// project slug
	ProjectSlug string `json:"ProjectSlug,omitempty"`

	// step Id
	StepID string `json:"StepId,omitempty"`

	// step name
	StepName string `json:"StepName,omitempty"`

	// version
	Version string `json:"Version,omitempty"`
}

// Validate validates this action template usage resource
func (m *ActionTemplateUsageResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastModifiedOn(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ActionTemplateUsageResource) validateLastModifiedOn(formats strfmt.Registry) error {

	if swag.IsZero(m.LastModifiedOn) { // not required
		return nil
	}

	if err := validate.FormatOf("LastModifiedOn", "body", "date-time", m.LastModifiedOn.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ActionTemplateUsageResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ActionTemplateUsageResource) UnmarshalBinary(b []byte) error {
	var res ActionTemplateUsageResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
