// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ActivityLogEntry activity log entry
// swagger:model ActivityLogEntry
type ActivityLogEntry struct {

	// category
	// Enum: [Trace Verbose Info Wait Highlight Gap Alert Warning Error Fatal Planned Updated Finished Abandoned]
	Category int32 `json:"Category,omitempty"`

	// detail
	Detail string `json:"Detail,omitempty"`

	// message text
	MessageText string `json:"MessageText,omitempty"`

	// occurred at
	// Format: date-time
	OccurredAt strfmt.DateTime `json:"OccurredAt,omitempty"`
}

// Validate validates this activity log entry
func (m *ActivityLogEntry) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCategory(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOccurredAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var activityLogEntryTypeCategoryPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`["Trace","Verbose","Info","Wait","Highlight","Gap","Alert","Warning","Error","Fatal","Planned","Updated","Finished","Abandoned"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		activityLogEntryTypeCategoryPropEnum = append(activityLogEntryTypeCategoryPropEnum, v)
	}
}

// prop value enum
func (m *ActivityLogEntry) validateCategoryEnum(path, location string, value int32) error {
	if err := validate.Enum(path, location, value, activityLogEntryTypeCategoryPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ActivityLogEntry) validateCategory(formats strfmt.Registry) error {

	if swag.IsZero(m.Category) { // not required
		return nil
	}

	// value enum
	if err := m.validateCategoryEnum("Category", "body", m.Category); err != nil {
		return err
	}

	return nil
}

func (m *ActivityLogEntry) validateOccurredAt(formats strfmt.Registry) error {

	if swag.IsZero(m.OccurredAt) { // not required
		return nil
	}

	if err := validate.FormatOf("OccurredAt", "body", "date-time", m.OccurredAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ActivityLogEntry) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ActivityLogEntry) UnmarshalBinary(b []byte) error {
	var res ActivityLogEntry
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
