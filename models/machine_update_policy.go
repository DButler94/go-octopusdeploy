// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MachineUpdatePolicy machine update policy
// swagger:model MachineUpdatePolicy
type MachineUpdatePolicy struct {

	// calamari update behavior
	// Enum: [UpdateOnDeployment UpdateOnNewMachine UpdateAlways]
	CalamariUpdateBehavior int32 `json:"CalamariUpdateBehavior,omitempty"`

	// tentacle update account Id
	TentacleUpdateAccountID string `json:"TentacleUpdateAccountId,omitempty"`

	// tentacle update behavior
	// Enum: [NeverUpdate Update]
	TentacleUpdateBehavior int32 `json:"TentacleUpdateBehavior,omitempty"`
}

// Validate validates this machine update policy
func (m *MachineUpdatePolicy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCalamariUpdateBehavior(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTentacleUpdateBehavior(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var machineUpdatePolicyTypeCalamariUpdateBehaviorPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`["UpdateOnDeployment","UpdateOnNewMachine","UpdateAlways"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		machineUpdatePolicyTypeCalamariUpdateBehaviorPropEnum = append(machineUpdatePolicyTypeCalamariUpdateBehaviorPropEnum, v)
	}
}

// prop value enum
func (m *MachineUpdatePolicy) validateCalamariUpdateBehaviorEnum(path, location string, value int32) error {
	if err := validate.Enum(path, location, value, machineUpdatePolicyTypeCalamariUpdateBehaviorPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *MachineUpdatePolicy) validateCalamariUpdateBehavior(formats strfmt.Registry) error {

	if swag.IsZero(m.CalamariUpdateBehavior) { // not required
		return nil
	}

	// value enum
	if err := m.validateCalamariUpdateBehaviorEnum("CalamariUpdateBehavior", "body", m.CalamariUpdateBehavior); err != nil {
		return err
	}

	return nil
}

var machineUpdatePolicyTypeTentacleUpdateBehaviorPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`["NeverUpdate","Update"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		machineUpdatePolicyTypeTentacleUpdateBehaviorPropEnum = append(machineUpdatePolicyTypeTentacleUpdateBehaviorPropEnum, v)
	}
}

// prop value enum
func (m *MachineUpdatePolicy) validateTentacleUpdateBehaviorEnum(path, location string, value int32) error {
	if err := validate.Enum(path, location, value, machineUpdatePolicyTypeTentacleUpdateBehaviorPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *MachineUpdatePolicy) validateTentacleUpdateBehavior(formats strfmt.Registry) error {

	if swag.IsZero(m.TentacleUpdateBehavior) { // not required
		return nil
	}

	// value enum
	if err := m.validateTentacleUpdateBehaviorEnum("TentacleUpdateBehavior", "body", m.TentacleUpdateBehavior); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MachineUpdatePolicy) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MachineUpdatePolicy) UnmarshalBinary(b []byte) error {
	var res MachineUpdatePolicy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
