// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AuthenticationProviderElement authentication provider element
// swagger:model AuthenticationProviderElement
type AuthenticationProviderElement struct {

	// CSS links
	CSSLinks []string `json:"CSSLinks"`

	// forms login enabled
	FormsLoginEnabled bool `json:"FormsLoginEnabled,omitempty"`

	// identity type
	// Enum: [Guest UsernamePassword ActiveDirectory OAuth]
	IdentityType int32 `json:"IdentityType,omitempty"`

	// javascript links
	JavascriptLinks []string `json:"JavascriptLinks"`

	// links
	Links map[string]string `json:"Links,omitempty"`

	// name
	Name string `json:"Name,omitempty"`
}

// Validate validates this authentication provider element
func (m *AuthenticationProviderElement) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIdentityType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var authenticationProviderElementTypeIdentityTypePropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`["Guest","UsernamePassword","ActiveDirectory","OAuth"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		authenticationProviderElementTypeIdentityTypePropEnum = append(authenticationProviderElementTypeIdentityTypePropEnum, v)
	}
}

// prop value enum
func (m *AuthenticationProviderElement) validateIdentityTypeEnum(path, location string, value int32) error {
	if err := validate.Enum(path, location, value, authenticationProviderElementTypeIdentityTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AuthenticationProviderElement) validateIdentityType(formats strfmt.Registry) error {

	if swag.IsZero(m.IdentityType) { // not required
		return nil
	}

	// value enum
	if err := m.validateIdentityTypeEnum("IdentityType", "body", m.IdentityType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AuthenticationProviderElement) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AuthenticationProviderElement) UnmarshalBinary(b []byte) error {
	var res AuthenticationProviderElement
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
