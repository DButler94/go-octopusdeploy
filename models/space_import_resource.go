// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SpaceImportResource space import resource
// swagger:model SpaceImportResource
type SpaceImportResource struct {

	// delete package on completion
	DeletePackageOnCompletion bool `json:"DeletePackageOnCompletion,omitempty"`

	// failure callback Uri
	FailureCallbackURI string `json:"FailureCallbackUri,omitempty"`

	// Id
	ID string `json:"Id,omitempty"`

	// is dry run
	IsDryRun bool `json:"IsDryRun,omitempty"`

	// is encrypted package
	IsEncryptedPackage bool `json:"IsEncryptedPackage,omitempty"`

	// last modified by
	LastModifiedBy string `json:"LastModifiedBy,omitempty"`

	// last modified on
	// Format: date-time
	LastModifiedOn strfmt.DateTime `json:"LastModifiedOn,omitempty"`

	// links
	Links map[string]string `json:"Links,omitempty"`

	// overwrite existing
	OverwriteExisting bool `json:"OverwriteExisting,omitempty"`

	// package Id
	PackageID string `json:"PackageId,omitempty"`

	// package version
	PackageVersion string `json:"PackageVersion,omitempty"`

	// password
	Password string `json:"Password,omitempty"`

	// success callback Uri
	SuccessCallbackURI string `json:"SuccessCallbackUri,omitempty"`

	// task Id
	TaskID string `json:"TaskId,omitempty"`
}

// Validate validates this space import resource
func (m *SpaceImportResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastModifiedOn(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SpaceImportResource) validateLastModifiedOn(formats strfmt.Registry) error {

	if swag.IsZero(m.LastModifiedOn) { // not required
		return nil
	}

	if err := validate.FormatOf("LastModifiedOn", "body", "date-time", m.LastModifiedOn.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SpaceImportResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SpaceImportResource) UnmarshalBinary(b []byte) error {
	var res SpaceImportResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
