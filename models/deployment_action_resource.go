// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeploymentActionResource deployment action resource
// swagger:model DeploymentActionResource
type DeploymentActionResource struct {

	// action type
	ActionType string `json:"ActionType,omitempty"`

	// can be used for project versioning
	CanBeUsedForProjectVersioning bool `json:"CanBeUsedForProjectVersioning,omitempty"`

	// channels
	// Read Only: true
	Channels []string `json:"Channels"`

	// environments
	// Read Only: true
	Environments []string `json:"Environments"`

	// excluded environments
	// Read Only: true
	ExcludedEnvironments []string `json:"ExcludedEnvironments"`

	// Id
	ID string `json:"Id,omitempty"`

	// is disabled
	IsDisabled bool `json:"IsDisabled,omitempty"`

	// last modified by
	LastModifiedBy string `json:"LastModifiedBy,omitempty"`

	// last modified on
	// Format: date-time
	LastModifiedOn strfmt.DateTime `json:"LastModifiedOn,omitempty"`

	// links
	Links map[string]string `json:"Links,omitempty"`

	// name
	Name string `json:"Name,omitempty"`

	// properties
	Properties DeploymentActionResourceProperties `json:"Properties,omitempty"`

	// tenant tags
	// Read Only: true
	TenantTags []string `json:"TenantTags"`
}

// Validate validates this deployment action resource
func (m *DeploymentActionResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastModifiedOn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProperties(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeploymentActionResource) validateLastModifiedOn(formats strfmt.Registry) error {

	if swag.IsZero(m.LastModifiedOn) { // not required
		return nil
	}

	if err := validate.FormatOf("LastModifiedOn", "body", "date-time", m.LastModifiedOn.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *DeploymentActionResource) validateProperties(formats strfmt.Registry) error {

	if swag.IsZero(m.Properties) { // not required
		return nil
	}

	if err := m.Properties.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("Properties")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DeploymentActionResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeploymentActionResource) UnmarshalBinary(b []byte) error {
	var res DeploymentActionResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
