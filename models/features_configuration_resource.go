// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FeaturesConfigurationResource features configuration resource
// swagger:model FeaturesConfigurationResource
type FeaturesConfigurationResource struct {

	// Id
	ID string `json:"Id,omitempty"`

	// is built in repo sync enabled
	IsBuiltInRepoSyncEnabled bool `json:"IsBuiltInRepoSyncEnabled,omitempty"`

	// is community action templates enabled
	IsCommunityActionTemplatesEnabled bool `json:"IsCommunityActionTemplatesEnabled,omitempty"`

	// is multi tenancy enabled
	IsMultiTenancyEnabled bool `json:"IsMultiTenancyEnabled,omitempty"`

	// last modified by
	LastModifiedBy string `json:"LastModifiedBy,omitempty"`

	// last modified on
	// Format: date-time
	LastModifiedOn strfmt.DateTime `json:"LastModifiedOn,omitempty"`

	// links
	Links map[string]string `json:"Links,omitempty"`
}

// Validate validates this features configuration resource
func (m *FeaturesConfigurationResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastModifiedOn(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FeaturesConfigurationResource) validateLastModifiedOn(formats strfmt.Registry) error {

	if swag.IsZero(m.LastModifiedOn) { // not required
		return nil
	}

	if err := validate.FormatOf("LastModifiedOn", "body", "date-time", m.LastModifiedOn.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *FeaturesConfigurationResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FeaturesConfigurationResource) UnmarshalBinary(b []byte) error {
	var res FeaturesConfigurationResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
